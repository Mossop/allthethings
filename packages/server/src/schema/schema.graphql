type User {
  email: String!
  password: String!
  contexts: [Context!]!
  rootProjects: [Project!]!
}

type Context {
  id: ID!
  user: User!
  stub: String!
  name: String!
  rootProjects: [Project!]!
}

type Project {
  id: ID!
  user: User!
  context: Context
  parent: Project
  stub: String!
  name: String!
  subprojects: [Project!]!
}

type Query {
  user: User
  context(id: ID!): Context
}

input CreateContextParams {
  name: String!
}

input CreateProjectParams {
  name: String!
  context: ID
  parent: ID
}

input UpdateProjectParams {
  name: String
  context: ID
  parent: ID
}

type Mutation {
  login(email: String!, password: String!): User
  logout: Boolean
  createContext(params: CreateContextParams!): Context!
  deleteContext(id: ID!): Boolean!
  createProject(params: CreateProjectParams!): Project!
  updateProject(id: ID!, params: UpdateProjectParams!): Project
  deleteProject(id: ID!): Boolean!
}
