type User {
  id: ID!
  email: String!
  password: String!
  contexts: [Context!]!
  emptyContext: EmptyContext
}

union ProjectContext = Context | EmptyContext

type Context {
  id: ID!
  user: User!
  name: String!
  projects: [Project!]!
}

type EmptyContext {
  user: User!
  projects: [Project!]!
}

type Project {
  id: ID!
  parent: Project
  context: ProjectContext
  name: String
  subprojects: [Project!]!
}

type Query {
  user: User
  context(id: ID!): Context
}

type Mutation {
  login(email: String!, password: String!): User
  logout: Boolean
  createContext(name: String!): Context!
  createProject(name: String!, parent: ID, context: ID): Project!
  assignContext(project: ID!, context: ID): Project
  assignParent(project: ID!, parent: ID): Project
}
