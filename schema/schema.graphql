type User @entity(additionalFields: [
 { path: "_id", type: "ObjectID" }
]) {
  email: String! @column
  password: String! @column

  contexts: [Context!]!
  rootProjects: [Project!]!
}

type Context @entity {
  id: ID! @id
  user: User! @link
  name: String! @column

  rootProjects: [Project!]!
}

type Project @entity {
  id: ID! @id
  user: User! @link
  context: Context @link
  parent: Project @link
  name: String @column

  subprojects: [Project!]!
}

type Query {
  user: User
  context(id: ID!): Context
}

input CreateContextParams {
  name: String!
}

input CreateProjectParams {
  name: String!
  context: ID
  parent: ID
}

input UpdateProjectParams {
  name: String
  context: ID
  parent: ID
}

type Mutation {
  login(email: String!, password: String!): User
  logout: Boolean

  createContext(params: CreateContextParams!): Context!
  deleteContext(id: ID!): Boolean!

  createProject(params: CreateProjectParams!): Project!
  updateProject(id: ID!, params: UpdateProjectParams!): Project
  deleteProject(id: ID!): Boolean!
}
